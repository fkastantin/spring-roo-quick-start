// WARNING: DO NOT EDIT THIS FILE. THIS FILE IS MANAGED BY SPRING ROO.
// You may push code into the target .java compilation unit if you wish to edit any member(s).

package com.app.service.impl;

import com.app.model.Course;
import com.app.model.Student;
import com.app.repository.CourseRepository;
import com.app.service.impl.CourseServiceImpl;
import io.springlets.data.domain.GlobalSearch;
import io.springlets.data.web.validation.MessageI18n;
import java.util.List;
import java.util.Map;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.data.domain.Page;
import org.springframework.data.domain.Pageable;
import org.springframework.stereotype.Service;
import org.springframework.transaction.annotation.Transactional;

privileged aspect CourseServiceImpl_Roo_Service_Impl {
    
    declare @type: CourseServiceImpl: @Service;
    
    declare @type: CourseServiceImpl: @Transactional(readOnly = true);
    
    /**
     * TODO Auto-generated attribute documentation
     * 
     */
    private CourseRepository CourseServiceImpl.courseRepository;
    
    /**
     * TODO Auto-generated constructor documentation
     * 
     * @param courseRepository
     */
    @Autowired
    public CourseServiceImpl.new(CourseRepository courseRepository) {
        setCourseRepository(courseRepository);
    }

    /**
     * TODO Auto-generated method documentation
     * 
     * @return CourseRepository
     */
    public CourseRepository CourseServiceImpl.getCourseRepository() {
        return courseRepository;
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param courseRepository
     */
    public void CourseServiceImpl.setCourseRepository(CourseRepository courseRepository) {
        this.courseRepository = courseRepository;
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param course
     * @return Map
     */
    public Map<String, List<MessageI18n>> CourseServiceImpl.validate(Course course) {
        Map<String, List<MessageI18n>> messages = new java.util.HashMap<String, List<MessageI18n>>();
        
        // TODO: IMPLEMENT HERE THE VALIDATION OF YOUR ENTITY
        
        return messages;
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param course
     */
    @Transactional
    public void CourseServiceImpl.delete(Course course) {
        // Clear bidirectional many-to-many child relationship with Student
        for (Student item : course.getStudents()) {
            item.getRegisteredCourses().remove(course);
        }
        
        getCourseRepository().delete(course);
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param entities
     * @return List
     */
    @Transactional
    public List<Course> CourseServiceImpl.save(Iterable<Course> entities) {
        return getCourseRepository().save(entities);
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param ids
     */
    @Transactional
    public void CourseServiceImpl.delete(Iterable<Long> ids) {
        List<Course> toDelete = getCourseRepository().findAll(ids);
        getCourseRepository().deleteInBatch(toDelete);
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param entity
     * @return Course
     */
    @Transactional
    public Course CourseServiceImpl.save(Course entity) {
        return getCourseRepository().save(entity);
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param id
     * @return Course
     */
    public Course CourseServiceImpl.findOne(Long id) {
        return getCourseRepository().findOne(id);
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param id
     * @return Course
     */
    public Course CourseServiceImpl.findOneForUpdate(Long id) {
        return getCourseRepository().findOneDetached(id);
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param ids
     * @return List
     */
    public List<Course> CourseServiceImpl.findAll(Iterable<Long> ids) {
        return getCourseRepository().findAll(ids);
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @return List
     */
    public List<Course> CourseServiceImpl.findAll() {
        return getCourseRepository().findAll();
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @return Long
     */
    public long CourseServiceImpl.count() {
        return getCourseRepository().count();
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param globalSearch
     * @param pageable
     * @return Page
     */
    public Page<Course> CourseServiceImpl.findAll(GlobalSearch globalSearch, Pageable pageable) {
        return getCourseRepository().findAll(globalSearch, pageable);
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param ids
     * @param globalSearch
     * @param pageable
     * @return Page
     */
    public Page<Course> CourseServiceImpl.findAllByIdsIn(List<Long> ids, GlobalSearch globalSearch, Pageable pageable) {
        return getCourseRepository().findAllByIdsIn(ids, globalSearch, pageable);
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param students
     * @param globalSearch
     * @param pageable
     * @return Page
     */
    public Page<Course> CourseServiceImpl.findByStudentsContains(Student students, GlobalSearch globalSearch, Pageable pageable) {
        return getCourseRepository().findByStudentsContains(students, globalSearch, pageable);
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param students
     * @return Long
     */
    public long CourseServiceImpl.countByStudentsContains(Student students) {
        return getCourseRepository().countByStudentsContains(students);
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @return Class
     */
    public Class<Course> CourseServiceImpl.getEntityType() {
        return Course.class;
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @return Class
     */
    public Class<Long> CourseServiceImpl.getIdType() {
        return Long.class;
    }
    
}
