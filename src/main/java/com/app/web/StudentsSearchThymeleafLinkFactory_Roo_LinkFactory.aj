// WARNING: DO NOT EDIT THIS FILE. THIS FILE IS MANAGED BY SPRING ROO.
// You may push code into the target .java compilation unit if you wish to edit any member(s).

package com.app.web;

import com.app.web.StudentsSearchThymeleafController;
import com.app.web.StudentsSearchThymeleafLinkFactory;
import io.springlets.web.mvc.util.MethodLinkFactory;
import io.springlets.web.mvc.util.SpringletsMvcUriComponentsBuilder;
import java.util.Map;
import org.springframework.stereotype.Component;
import org.springframework.web.util.UriComponents;

privileged aspect StudentsSearchThymeleafLinkFactory_Roo_LinkFactory {
    
    declare parents: StudentsSearchThymeleafLinkFactory implements MethodLinkFactory<StudentsSearchThymeleafController>;
    
    declare @type: StudentsSearchThymeleafLinkFactory: @Component;
    
    /**
     * TODO Auto-generated attribute documentation
     * 
     */
    public static final String StudentsSearchThymeleafLinkFactory.BYFIRSTNAMEANDLASTNAMEFORM = "byFirstNameAndLastNameForm";
    
    /**
     * TODO Auto-generated attribute documentation
     * 
     */
    public static final String StudentsSearchThymeleafLinkFactory.BYFIRSTNAMEANDLASTNAME = "byFirstNameAndLastName";
    
    /**
     * TODO Auto-generated attribute documentation
     * 
     */
    public static final String StudentsSearchThymeleafLinkFactory.BYFIRSTNAMEANDLASTNAMEDT = "byFirstNameAndLastNameDt";
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @return Class
     */
    public Class<StudentsSearchThymeleafController> StudentsSearchThymeleafLinkFactory.getControllerClass() {
        return StudentsSearchThymeleafController.class;
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param methodName
     * @param parameters
     * @param pathVariables
     * @return UriComponents
     */
    public UriComponents StudentsSearchThymeleafLinkFactory.toUri(String methodName, Object[] parameters, Map<String, Object> pathVariables) {
        if (methodName.equals(BYFIRSTNAMEANDLASTNAMEFORM)) {
            return SpringletsMvcUriComponentsBuilder.fromMethodCall(SpringletsMvcUriComponentsBuilder.on(getControllerClass()).byFirstNameAndLastNameForm(null, null)).buildAndExpand(pathVariables);
        }
        if (methodName.equals(BYFIRSTNAMEANDLASTNAME)) {
            return SpringletsMvcUriComponentsBuilder.fromMethodCall(SpringletsMvcUriComponentsBuilder.on(getControllerClass()).byFirstNameAndLastName(null, null)).buildAndExpand(pathVariables);
        }
        if (methodName.equals(BYFIRSTNAMEANDLASTNAMEDT)) {
            return SpringletsMvcUriComponentsBuilder.fromMethodCall(SpringletsMvcUriComponentsBuilder.on(getControllerClass()).byFirstNameAndLastNameDt(null, null, null, null, null)).buildAndExpand(pathVariables);
        }
        throw new IllegalArgumentException("Invalid method name: " + methodName);
    }
    
}
